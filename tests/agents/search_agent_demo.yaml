interactions:
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - 0.0.0.0:8935
      user-agent:
      - python-httpx/0.23.3
    method: GET
    uri: http://0.0.0.0:8935/ping
  response:
    content: ought-ice says pong
    headers:
      content-length:
      - '19'
      content-type:
      - text/plain; charset=utf-8
      date:
      - Fri, 03 Mar 2023 07:32:22 GMT
      server:
      - uvicorn
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought:"], "model":
      "text-davinci-003", "temperature": 0.0, "max_tokens": 256, "top_p": 1, "frequency_penalty":
      0, "presence_penalty": 0, "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation:
      ", "\n\tObservation: "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1078'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.5
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6puBpfOdrAeHCEseGXPYMRumzPEV3","object":"text_completion","created":1677828741,"model":"text-davinci-003","choices":[{"text":"
        I need to find out who Olivia Wilde''s boyfriend is and then calculate his
        age raised to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde
        boyfriend\"","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":196,"completion_tokens":39,"total_tokens":235}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '426'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Mar 2023 07:32:23 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '2347'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 7be2b90a2da0b010640c8b593f826cc7
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.28.2
    method: GET
    uri: https://serpapi.com/search?engine=google&gl=us&google_domain=google.com&hl=en&output=json&q=Olivia+Wilde+boyfriend&source=python
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - MISS
      CF-Ray:
      - 7a202f766d8c299d-MEL
      Cache-Control:
      - max-age=3600, public
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 03 Mar 2023 07:32:25 GMT
      ETag:
      - W/"896cbc999f905459eb499f1132b78232"
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      referrer-policy:
      - strict-origin-when-cross-origin
      serpapi-search-id:
      - 6401a124116a55bbfc8d1aec
      x-content-type-options:
      - nosniff
      x-download-options:
      - noopen
      x-frame-options:
      - SAMEORIGIN
      x-permitted-cross-domain-policies:
      - none
      x-request-id:
      - a180dc23-8993-41e0-9a7b-ca4ab15146bc
      x-robots-tag:
      - noindex, nofollow
      x-runtime:
      - '0.041656'
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought: I need
      to find out who Olivia Wilde''s boyfriend is and then calculate his age raised
      to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde boyfriend\"\nObservation:
      Jason Sudeikis\nThought:"], "model": "text-davinci-003", "temperature": 0.0,
      "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0,
      "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation: ", "\n\tObservation:
      "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1279'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.5
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6puBuATTLGuQ4CTPoDQqIFbh9DNuB","object":"text_completion","created":1677828746,"model":"text-davinci-003","choices":[{"text":"
        I need to find out Jason Sudeikis'' age\nAction: Search\nAction Input: \"Jason
        Sudeikis age\"","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":248,"completion_tokens":28,"total_tokens":276}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '357'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Mar 2023 07:32:28 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '1605'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 27176c0b98efd1633361a78ec5b1f6e2
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.28.2
    method: GET
    uri: https://serpapi.com/search?engine=google&gl=us&google_domain=google.com&hl=en&output=json&q=Jason+Sudeikis+age&source=python
  response:
    body:
      string: !!binary |
        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
        rjExQMqlXLUAAAAA//8DACy5mDccEwEA
    headers:
      CF-Cache-Status:
      - MISS
      CF-Ray:
      - 7a202f94e8f42b37-MEL
      Cache-Control:
      - max-age=3600, public
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 03 Mar 2023 07:32:30 GMT
      ETag:
      - W/"aaa01a9ff65f456d64bfdba08652c21a"
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      referrer-policy:
      - strict-origin-when-cross-origin
      serpapi-search-id:
      - 6401a1280a90c773bda9c0cf
      x-content-type-options:
      - nosniff
      x-download-options:
      - noopen
      x-frame-options:
      - SAMEORIGIN
      x-permitted-cross-domain-policies:
      - none
      x-request-id:
      - 10a9fe6d-effc-43bf-9a37-ab0a160e7dc0
      x-robots-tag:
      - noindex, nofollow
      x-runtime:
      - '0.066444'
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought: I need
      to find out who Olivia Wilde''s boyfriend is and then calculate his age raised
      to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde boyfriend\"\nObservation:
      Jason Sudeikis\nThought: I need to find out Jason Sudeikis'' age\nAction: Search\nAction
      Input: \"Jason Sudeikis age\"\nObservation: 47 years\nThought:"], "model": "text-davinci-003",
      "temperature": 0.0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty":
      0, "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation: ", "\n\tObservation:
      "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1405'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.5
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6puBzAZ9N3XpMBbkHc8lxeXfP06ZH","object":"text_completion","created":1677828751,"model":"text-davinci-003","choices":[{"text":"
        I need to calculate 47 raised to the 0.23 power\nAction: Calculator\nAction
        Input: 47^0.23","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":286,"completion_tokens":25,"total_tokens":311}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '355'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Mar 2023 07:32:32 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '1714'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 512fce2265037626c56e798db57596d8
    status:
      code: 200
      message: OK
- request:
    body: '{"prompt": ["You are GPT-3, and you can''t do math.\n\nYou can do basic
      math, and your memorization abilities are impressive, but you can''t do any
      complex calculations that a human could not do in their head. You also have
      an annoying tendency to just make up highly specific, but wrong, answers.\n\nSo
      we hooked you up to a Python 3 kernel, and now you can execute code. If anyone
      gives you a hard math problem, just use this format and we\u2019ll take care
      of the rest:\n\nQuestion: ${Question with hard calculation.}\n```python\n${Code
      that prints what you need to know}\n```\n```output\n${Output of your code}\n```\nAnswer:
      ${Answer}\n\nOtherwise, use this simpler format:\n\nQuestion: ${Question without
      hard calculation}\nAnswer: ${Answer}\n\nBegin.\n\nQuestion: What is 37593 *
      67?\n\n```python\nprint(37593 * 67)\n```\n```output\n2518731\n```\nAnswer: 2518731\n\nQuestion:
      47^0.23\n"], "model": "text-davinci-003", "temperature": 0.0, "max_tokens":
      256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "best_of":
      1, "logit_bias": {}, "stop": ["```output"]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1082'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.5
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6puC1aPomVnx4bvZNMpN3bQFWEXIc","object":"text_completion","created":1677828753,"model":"text-davinci-003","choices":[{"text":"\n```python\nimport
        math\nprint(math.pow(47, 0.23))\n```\n","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":241,"completion_tokens":25,"total_tokens":266}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '322'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Mar 2023 07:32:34 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '1394'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 2c94ccc40bb3fab5802825f11e92c3d5
    status:
      code: 200
      message: OK
- request:
    body: '{"command": "\nimport math\nprint(math.pow(47, 0.23))"}'
    headers: {}
    method: POST
    uri: tool://PythonREPL/run
  response: '2.4242784855673896

    '
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought: I need
      to find out who Olivia Wilde''s boyfriend is and then calculate his age raised
      to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde boyfriend\"\nObservation:
      Jason Sudeikis\nThought: I need to find out Jason Sudeikis'' age\nAction: Search\nAction
      Input: \"Jason Sudeikis age\"\nObservation: 47 years\nThought: I need to calculate
      47 raised to the 0.23 power\nAction: Calculator\nAction Input: 47^0.23\nObservation:
      Answer: 2.4242784855673896\n\nThought:"], "model": "text-davinci-003", "temperature":
      0.0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty":
      0, "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation: ", "\n\tObservation:
      "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1549'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.5
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6puC3sWSAIOdaF8AZkvHLMAuZLna2","object":"text_completion","created":1677828755,"model":"text-davinci-003","choices":[{"text":"
        I now know the final answer\nFinal Answer: Jason Sudeikis, Olivia Wilde''s
        boyfriend, is 47 years old and his age raised to the 0.23 power is 2.4242784855673896.","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":331,"completion_tokens":46,"total_tokens":377}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '425'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Mar 2023 07:32:37 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '2076'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - f2dc2ea423b74b846f9989238c28ce09
    status:
      code: 200
      message: OK
version: 1
