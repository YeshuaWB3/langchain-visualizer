interactions:
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought:"], "model":
      "text-davinci-003", "temperature": 0.0, "max_tokens": 256, "top_p": 1, "frequency_penalty":
      0, "presence_penalty": 0, "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation:
      "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1057'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.4
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6flNp7bpw3SwnzLeZMnbW7XJF9VzY","object":"text_completion","created":1675411609,"model":"text-davinci-003","choices":[{"text":"
        I need to find out who Olivia Wilde''s boyfriend is and then calculate his
        age raised to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde
        boyfriend\"","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":196,"completion_tokens":39,"total_tokens":235}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '426'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Feb 2023 08:06:51 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '2087'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - f8ccb5ee28e572f61ee3d4cc373fda1c
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.28.2
    method: GET
    uri: https://serpapi.com/search?engine=google&gl=us&google_domain=google.com&hl=en&output=json&q=Olivia+Wilde+boyfriend&source=python
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - MISS
      CF-Ray:
      - 7939ab728cde204b-IAD
      Cache-Control:
      - max-age=3600, public
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 03 Feb 2023 08:06:52 GMT
      ETag:
      - W/"73228dc2fd6face96203ebb196ed0d78"
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      referrer-policy:
      - strict-origin-when-cross-origin
      serpapi-search-id:
      - 63dcb911654a8cae93c43305
      x-content-type-options:
      - nosniff
      x-download-options:
      - noopen
      x-frame-options:
      - SAMEORIGIN
      x-permitted-cross-domain-policies:
      - none
      x-request-id:
      - 213a4db7-ebc3-4673-a3ef-3fad9d63e55a
      x-robots-tag:
      - noindex, nofollow
      x-runtime:
      - '0.099352'
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought: I need
      to find out who Olivia Wilde''s boyfriend is and then calculate his age raised
      to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde boyfriend\"\nObservation:
      Jason Sudeikis\nThought:"], "model": "text-davinci-003", "temperature": 0.0,
      "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0,
      "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation: "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1258'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.4
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6flNtpIOQQvVUw1X2CFQMIbpN4Gg5","object":"text_completion","created":1675411613,"model":"text-davinci-003","choices":[{"text":"
        I need to find out Jason Sudeikis'' age\nAction: Search\nAction Input: \"Jason
        Sudeikis age\"","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":248,"completion_tokens":28,"total_tokens":276}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '357'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Feb 2023 08:06:56 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '2656'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 003331840833e331efdde074e21da0cb
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.28.2
    method: GET
    uri: https://serpapi.com/search?engine=google&gl=us&google_domain=google.com&hl=en&output=json&q=Jason+Sudeikis+age&source=python
  response:
    body:
      string: !!binary |
        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
    headers:
      Age:
      - '1391'
      CF-Cache-Status:
      - HIT
      CF-Ray:
      - 7939ab99aa6b2423-IAD
      Cache-Control:
      - max-age=3600, public
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 03 Feb 2023 08:06:58 GMT
      ETag:
      - W/"23037e140399e50196f8b46a9aa758ee"
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      alt-svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
      referrer-policy:
      - strict-origin-when-cross-origin
      serpapi-search-id:
      - 63dcb914272aa54fcfc35d6e
      x-content-type-options:
      - nosniff
      x-download-options:
      - noopen
      x-frame-options:
      - SAMEORIGIN
      x-permitted-cross-domain-policies:
      - none
      x-request-id:
      - 54bb94c1-2320-47a3-9a66-2b539352da8a
      x-robots-tag:
      - noindex, nofollow
      x-runtime:
      - '0.072059'
      x-xss-protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought: I need
      to find out who Olivia Wilde''s boyfriend is and then calculate his age raised
      to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde boyfriend\"\nObservation:
      Jason Sudeikis\nThought: I need to find out Jason Sudeikis'' age\nAction: Search\nAction
      Input: \"Jason Sudeikis age\"\nObservation: 47 years\nThought:"], "model": "text-davinci-003",
      "temperature": 0.0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty":
      0, "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation: "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1384'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.4
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6flNzLE68OsDpvHj3Vlv5EPyvyrIn","object":"text_completion","created":1675411619,"model":"text-davinci-003","choices":[{"text":"
        I need to calculate 47 raised to the 0.23 power\nAction: Calculator\nAction
        Input: 47^0.23","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":286,"completion_tokens":25,"total_tokens":311}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '355'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Feb 2023 08:07:00 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '1569'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 3dead5489f9c7a45f175890e32878406
    status:
      code: 200
      message: OK
- request:
    body: '{"prompt": ["You are GPT-3, and you can''t do math.\n\nYou can do basic
      math, and your memorization abilities are impressive, but you can''t do any
      complex calculations that a human could not do in their head. You also have
      an annoying tendency to just make up highly specific, but wrong, answers.\n\nSo
      we hooked you up to a Python 3 kernel, and now you can execute code. If anyone
      gives you a hard math problem, just use this format and we\u2019ll take care
      of the rest:\n\nQuestion: ${Question with hard calculation.}\n```python\n${Code
      that prints what you need to know}\n```\n```output\n${Output of your code}\n```\nAnswer:
      ${Answer}\n\nOtherwise, use this simpler format:\n\nQuestion: ${Question without
      hard calculation}\nAnswer: ${Answer}\n\nBegin.\n\nQuestion: What is 37593 *
      67?\n\n```python\nprint(37593 * 67)\n```\n```output\n2518731\n```\nAnswer: 2518731\n\nQuestion:
      47^0.23\n"], "model": "text-davinci-003", "temperature": 0.0, "max_tokens":
      256, "top_p": 1, "frequency_penalty": 0, "presence_penalty": 0, "n": 1, "best_of":
      1, "logit_bias": {}, "stop": ["```output"]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1082'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.4
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6flO1G90YXXOJubclIEWD8BKNGcRq","object":"text_completion","created":1675411621,"model":"text-davinci-003","choices":[{"text":"\n```python\nimport
        math\nprint(math.pow(47, 0.23))\n```\n","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":241,"completion_tokens":25,"total_tokens":266}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '322'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Feb 2023 08:07:02 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '1596'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 5e3dffcb5422a3ffe3b17267f05be8fa
    status:
      code: 200
      message: OK
- request:
    body: '{"command": "\nimport math\nprint(math.pow(47, 0.23))"}'
    headers: {}
    method: POST
    uri: tool://PythonREPL
  response: '2.4242784855673896

    '
- request:
    body: '{"prompt": ["Answer the following questions as best you can. You have access
      to the following tools:\n\nSearch: A search engine. Useful for when you need
      to answer questions about current events. Input should be a search query.\nCalculator:
      Useful for when you need to answer questions about math.\n\nUse the following
      format:\n\nQuestion: the input question you must answer\nThought: you should
      always think about what to do\nAction: the action to take, should be one of
      [Search, Calculator]\nAction Input: the input to the action\nObservation: the
      result of the action\n... (this Thought/Action/Action Input/Observation can
      repeat N times)\nThought: I now know the final answer\nFinal Answer: the final
      answer to the original input question\n\nBegin!\n\nQuestion: Who is Olivia Wilde''s
      boyfriend? What is his current age raised to the 0.23 power?\nThought: I need
      to find out who Olivia Wilde''s boyfriend is and then calculate his age raised
      to the 0.23 power.\nAction: Search\nAction Input: \"Olivia Wilde boyfriend\"\nObservation:
      Jason Sudeikis\nThought: I need to find out Jason Sudeikis'' age\nAction: Search\nAction
      Input: \"Jason Sudeikis age\"\nObservation: 47 years\nThought: I need to calculate
      47 raised to the 0.23 power\nAction: Calculator\nAction Input: 47^0.23\nObservation:
      Answer: 2.4242784855673896\n\nThought:"], "model": "text-davinci-003", "temperature":
      0.0, "max_tokens": 256, "top_p": 1, "frequency_penalty": 0, "presence_penalty":
      0, "n": 1, "best_of": 1, "logit_bias": {}, "stop": ["\nObservation: "]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1528'
      Content-Type:
      - application/json
      User-Agent:
      - OpenAI/v1 PythonBindings/0.26.4
    method: POST
    uri: https://api.openai.com/v1/completions
  response:
    body:
      string: '{"id":"cmpl-6flO3x2P0vZshrsyb4RjI3VmMnWKz","object":"text_completion","created":1675411623,"model":"text-davinci-003","choices":[{"text":"
        I now know the final answer\nFinal Answer: Jason Sudeikis, Olivia Wilde''s
        boyfriend, is 47 years old and his age raised to the 0.23 power is 2.4242784855673896.","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":331,"completion_tokens":46,"total_tokens":377}}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Length:
      - '425'
      Content-Type:
      - application/json
      Date:
      - Fri, 03 Feb 2023 08:07:06 GMT
      Openai-Model:
      - text-davinci-003
      Openai-Organization: user-dummy
      Openai-Processing-Ms:
      - '2439'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - e23ad1593db4985a10bdaf6869370ed9
    status:
      code: 200
      message: OK
version: 1
